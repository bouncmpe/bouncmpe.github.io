name: Auto Generate Content

on:
  issues:
    types: [opened]

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract issue body to file
        run: |
          mkdir -p temp-posts
          echo "${{ github.event.issue.body }}" > issue-body.md

      - name: Generate content from issue
        run: |
          python3 <<EOF
          import re
          import os
          import unicodedata
          import json
          from datetime import datetime

          with open("issue-body.md", encoding="utf-8") as f:
              body = f.read()

          def extract_field(label):
              match = re.search(rf"### {label}\\s+(.+?)(?=(\\n###|$))", body, re.DOTALL)
              return match.group(1).strip() if match else ""

          def slugify(text):
              text = unicodedata.normalize('NFKD', text).encode('ascii', 'ignore').decode('ascii')
              return re.sub(r'[^a-z0-9]+', '-', text.lower()).strip('-')

          # Get issue labels from GitHub context
          labels = [label["name"].lower() for label in ${{ toJson(github.event.issue.labels) }}]

          is_event = 'event' in labels
          is_news = 'news' in labels

          if is_event:
              title = extract_field("Title")
              name = extract_field("Event Name")
              dt_raw = extract_field("Start Date and Time")
              dt = datetime.fromisoformat(dt_raw).isoformat()
              duration = extract_field("Duration")
              location = extract_field("Location")
              content = extract_field("Description (EN)")
              image = extract_field("Poster or Cover Image")

              slug = slugify(name or title)
              folder = f"temp-posts/{dt_raw.lower().replace(':', '-')}-{slug}"
              os.makedirs(folder, exist_ok=True)
              filename = f"{folder}/index.en.md"

              with open(filename, "w", encoding="utf-8") as f:
                  f.write("---\n")
                  f.write(f"type: phd-thesis-defense\n")
                  f.write(f'title: "{title}"\n')
                  f.write(f'name: {name}\n')
                  f.write(f'datetime: {dt}\n')
                  f.write(f'duration: {duration}\n')
                  f.write(f'location: {location}\n')
                  f.write("---\n\n")
                  if image:
                      f.write(image + "\n\n")
                  f.write(content.strip() + "\n")

          elif is_news:
              title = extract_field("Title")
              date = extract_field("Date")
              content = extract_field("Description (EN)")
              image = extract_field("Thumbnail Image")

              slug = slugify(title)
              folder = f"temp-posts/{date}-news-{slug}"
              os.makedirs(folder, exist_ok=True)
              filename = f"{folder}/index.en.md"

              with open(filename, "w", encoding="utf-8") as f:
                  f.write("---\n")
                  f.write(f"type: news\n")
                  f.write(f'title: "{title}"\n')
                  f.write(f'description: {title}\n')
                  f.write(f"featured: false\n")
                  f.write(f"date: {date}\n")
                  if image:
                      image_line = re.search(r'!\[.*?\]\((.*?)\)', image)
                      if image_line:
                          image_path = image_line.group(1)
                          f.write(f"thumbnail: {image_path}\n")
                  f.write("---\n\n")
                  f.write(content.strip() + "\n")
          else:
              print("❌ Could not detect type from labels.")
              exit(1)

          print("✅ File created:", filename)
          EOF

      - name: Move content into repo structure
        run: |
          mkdir -p content/events content/news
          cp -r temp-posts/* content/events/ || true
          cp -r temp-posts/* content/news/ || true

      - name: Commit and create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "📝 Auto-generated content from issue #${{ github.event.issue.number }}"
          title: "Auto-generated content from issue #${{ github.event.issue.number }}"
          body: "This pull request was automatically generated from the issue."
          branch: "auto/issue-${{ github.event.issue.number }}"

